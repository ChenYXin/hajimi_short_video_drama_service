services:
  # 应用程序服务 (已注释，本地运行 Go 程序时不使用下方 app 服务)
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       BASE_REGISTRY: ${REGISTRY:-}
  #   container_name: hajimi
  #   restart: unless-stopped
  #   ports:
  #     - "1800:1800"
  #     - "9090:9090"
  #   environment:
  #     # 服务器配置
  #     - APP_SERVER_HOST=0.0.0.0
  #     - APP_SERVER_PORT=1800
  #     - APP_SERVER_MODE=${APP_MODE:-debug}  # 支持环境变量切换模式
  #
  #     # 数据库配置
  #     - APP_DATABASE_HOST=mysql
  #     - APP_DATABASE_PORT=3306
  #     - APP_DATABASE_USERNAME=root
  #     - APP_DATABASE_PASSWORD=a123d789cDE
  #     - APP_DATABASE_DBNAME=hajimi
  #
  #     # Redis配置
  #     - APP_REDIS_HOST=redis
  #     - APP_REDIS_PORT=6379
  #
  #     # JWT配置
  #     - APP_JWT_SECRET=hajimi
  #
  #     # 日志配置
  #     - APP_LOGGING_LEVEL=${LOG_LEVEL:-info}
  #
  #     # 监控配置
  #     - APP_PROMETHEUS_ENABLED=${PROMETHEUS_ENABLED:-false}
  #   volumes:
  #     - ./uploads:/app/uploads
  #     - ./logs:/app/logs
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:1800/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

  # MySQL 数据库服务
  mysql:
    image: ${REGISTRY:-}mysql:8.0
    container_name: hajimi-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: a123d789cDE
      MYSQL_DATABASE: hajimi
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/01_init_db.sql:ro
      - ./scripts/seed_data.sql:/docker-entrypoint-initdb.d/02_seed_data.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pa123d789cDE"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis 缓存服务
  redis:
    image: ${REGISTRY:-}redis:6-alpine
    container_name: hajimi-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s


volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge